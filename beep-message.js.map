{"version":3,"file":"beep-message.js","sourceRoot":"","sources":["src/beep-message.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;;;AAEH,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAInD,IAAM,SAAS,GAAf,MAAM,SAAU,SAAQ,UAAU;IAAlC;;QAGL,YAAO,GAAG,QAAQ,CAAC;QAGnB,YAAO,GAAG,cAAc,CAAC;QAGzB,WAAM,GAAG,aAAa,CAAC;QAGvB,UAAK,GAAG,CAAC,CAAC;QAGV,SAAI,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAmDlC,CAAC;IAxBU,MAAM;QACb,OAAO,IAAI,CAAA;;;iCAGkB,IAAI,CAAC,MAAM,4CAA4C,IAAI,CAAC,IAAI;;aAEpF,IAAI,CAAC,OAAO;;wCAEe,IAAI,CAAC,QAAQ,0CAA0C,IAAI,CAAC,OAAO;yBAClF,IAAI,CAAC,KAAK;;;KAG9B,CAAC;IACJ,CAAC;IACO,QAAQ;QACd,IAAI,IAAI,CAAC,OAAO,KAAK,QAAQ,EAAE,CAAC;YAC9B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,KAAK,EAAE,CAAC;QACf,CAAC;aAAK,CAAC;YACL,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC;YACxB,IAAI,CAAC,KAAK,EAAE,CAAC;QACf,CAAC;QACD,IAAI,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC;IACvD,CAAC;;AAhDe,gBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;GAuB3B,AAvBqB,CAuBpB;AArCF;IADC,QAAQ,CAAC,EAAC,IAAI,EAAG,MAAM,EAAC,CAAC;0CACP;AAGnB;IADC,QAAQ,CAAC,EAAC,IAAI,EAAG,MAAM,EAAC,CAAC;0CACD;AAGzB;IADC,QAAQ,CAAC,EAAC,IAAI,EAAG,MAAM,EAAC,CAAC;yCACH;AAGvB;IADC,QAAQ,CAAC,EAAC,IAAI,EAAG,MAAM,EAAC,CAAC;wCAChB;AAGV;IADC,QAAQ,CAAC,EAAC,IAAI,EAAG,MAAM,EAAC,CAAC;uCACM;AAfrB,SAAS;IADrB,aAAa,CAAC,cAAc,CAAC;GACjB,SAAS,CAkErB","sourcesContent":["/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n * SPDX-License-Identifier: BSD-3-Clause\r\n */\r\n\r\nimport {LitElement, html, css} from 'lit';\r\nimport {customElement, property} from 'lit/decorators.js';\r\n\r\n\r\n@customElement('beep-message')\r\nexport class MyElement extends LitElement {\r\n\r\n  @property({type : String})\r\n  colLike = \"silver\";\r\n\r\n  @property({type : String})\r\n  content = \"Test content\";\r\n\r\n  @property({type : String})\r\n  author = \"Test author\";\r\n\r\n  @property({type : Number})\r\n  likes = 0;\r\n\r\n  @property({type : String})\r\n  date = new Date().toISOString();\r\n\r\n  static override styles = css`\r\n    .message {\r\n      display : flex;\r\n      flex-direction: column;\r\n      justify-content: flex-start;\r\n      border-bottom : 2px solid black;\r\n      padding : 10px;\r\n    }\r\n    .like {\r\n      width : 1vw;\r\n      aspect-ratio : 1 / 1;\r\n    }\r\n    .date {\r\n      font-size : 70%;\r\n    }\r\n    .author {\r\n      font-size : 120%;\r\n    }\r\n    .like_box {\r\n      display : flex;\r\n      flex-orientation : row;\r\n      gap : 10px;\r\n    }\r\n  `;  \r\n\r\n  override render() {\r\n    return html`\r\n      <div class=\"message\">\r\n        <div>\r\n          <span class=\"author\">${this.author}</span><span class=\"date\">  -- posted on ${this.date}</span>\r\n        </div>\r\n        <p>${this.content}</p>\r\n        <div class=\"like_box\">\r\n          <button class=\"like\" @click=${this._onClick} part=\"button\" style=\"background-color:${this.colLike};\"></button>\r\n          <div>Likes : ${this.likes}</div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n  private _onClick() {\r\n    if (this.colLike === \"silver\") {\r\n      this.colLike = \"red\";\r\n      this.likes++;\r\n    }else {\r\n      this.colLike = \"silver\";\r\n      this.likes--;\r\n    }\r\n    this.dispatchEvent(new CustomEvent('color-changed'));\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'beep-message': MyElement;\r\n  }\r\n}\r\n"]}